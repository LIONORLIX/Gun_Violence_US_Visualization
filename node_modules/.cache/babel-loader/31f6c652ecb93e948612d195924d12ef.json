{"ast":null,"code":"import _asyncToGenerator from\"/Users/lion/Documents/GitHub/Gun_Violence_US_Visualization/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/lion/Documents/GitHub/Gun_Violence_US_Visualization/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/lion/Documents/GitHub/Gun_Violence_US_Visualization/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useEffect,useCallback}from\"react\";import*as d3 from\"d3\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Statistics(data){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),statesData=_useState2[0],setStatesData=_useState2[1];//react用来注释数据\nvar ref=React.useRef(null);var _useState3=useState({width:document.documentElement.clientWidth,hieght:document.documentElement.clientHeight}),_useState4=_slicedToArray(_useState3,2),size=_useState4[0],setSize=_useState4[1];var onResize=useCallback(function(){setSize({width:document.documentElement.clientWidth,height:document.documentElement.clientHeight});},[]);// console.log(data)\nuseEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var margin,width,height,svgEL,svg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:window.addEventListener('resize',onResize);// set the dimensions and margins of the graph\nmargin={top:10,right:30,bottom:30,left:60},width=ref.current.clientWidth-30,height=400-margin.top-margin.bottom;svgEL=d3.select(ref.current);svgEL.selectAll(\"*\").remove();// append the svg object to the body of the page\nsvg=svgEL.append(\"svg\").attr(\"width\",width+margin.left+margin.right).attr(\"height\",height+margin.top+margin.bottom).append(\"g\").attr(\"transform\",\"translate(\".concat(margin.left,\", \").concat(margin.top,\")\"));//Read the data\nd3.csv(\"./data/date2.csv\",function(error,csvdata){if(error){console.log(error);}console.log(csvdata);},// When reading the csv, I must format variables:\nfunction(d){return{date:d3.timeParse(\"%Y-%m-%d\")(d.date),value:d.value};}).then(// Now I can use this dataset:\nfunction(data){console.log(data);// Add X axis --> it is a date format\nvar x=d3.scaleTime().domain(d3.extent(data,function(d){return d.date;})).range([0,width]);var xAxis=svg.append(\"g\").attr(\"transform\",\"translate(0, \".concat(height,\")\")).call(d3.axisBottom(x));// Add Y axis\nvar y=d3.scaleLinear().domain([0,d3.max(data,function(d){return+d.value;})]).range([height,0]);var yAxis=svg.append(\"g\").call(d3.axisLeft(y));// Add a clipPath: everything out of this area won't be drawn.\nvar clip=svg.append(\"defs\").append(\"svg:clipPath\").attr(\"id\",\"clip\").append(\"svg:rect\").attr(\"width\",width).attr(\"height\",height).attr(\"x\",0).attr(\"y\",0);// Add brushing\nvar brush=d3.brushX()// Add the brush feature using the d3.brush function\n.extent([[0,0],[width,height]])// initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\n.on(\"end\",updateChart);// Each time the brush selection changes, trigger the 'updateChart' function\n// Create the line variable: where both the line and the brush take place\nvar line=svg.append('g').attr(\"clip-path\",\"url(#clip)\");// Add the line\nline.append(\"path\").datum(data).attr(\"class\",\"line\")// I add the class line to be able to modify this line later on.\n.attr(\"fill\",\"none\").attr(\"stroke\",\"#a52723\").attr(\"stroke-width\",1.5).attr(\"d\",d3.line().x(function(d){return x(d.date);}).y(function(d){return y(d.value);}));// Add the brushing\nline.append(\"g\").attr(\"class\",\"brush\").call(brush);// A function that set idleTimeOut to null\nvar idleTimeout;function idled(){idleTimeout=null;}// A function that update the chart for given boundaries\nfunction updateChart(event,d){// What are the selected boundaries?\nvar extent=event.selection;// If no selection, back to initial coordinate. Otherwise, update X axis domain\nif(!extent){if(!idleTimeout)return idleTimeout=setTimeout(idled,350);// This allows to wait a little bit\nx.domain([4,8]);}else{x.domain([x.invert(extent[0]),x.invert(extent[1])]);line.select(\".brush\").call(brush.move,null);// This remove the grey brush area as soon as the selection has been done\n}// Update axis and line position\nxAxis.transition().duration(1000).call(d3.axisBottom(x));line.select('.line').transition().duration(1000).attr(\"d\",d3.line().x(function(d){return x(d.date);}).y(function(d){return y(d.value);}));}// If user double click, reinitialize the chart\nsvg.on(\"dblclick\",function(){x.domain(d3.extent(data,function(d){return d.date;}));xAxis.transition().call(d3.axisBottom(x));line.select('.line').transition().attr(\"d\",d3.line().x(function(d){return x(d.date);}).y(function(d){return y(d.value);}));});});return _context.abrupt(\"return\",function(){window.removeEventListener('resize',onResize);});case 7:case\"end\":return _context.stop();}}},_callee);}))();},[statesData.length,size.width]);return/*#__PURE__*/_jsxs(\"div\",{className:\"down-chart-container wider\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chart-title\",children:\"SHOOTING CASES in TIMELINE\"}),/*#__PURE__*/_jsx(\"div\",{className:\"down-chart usStatistics\",ref:ref})]})//渲染了这个东西出来\n;}export default Statistics;","map":{"version":3,"sources":["/Users/lion/Documents/GitHub/Gun_Violence_US_Visualization/src/charts/Statistics.js"],"names":["React","useState","useEffect","useCallback","d3","Statistics","data","statesData","setStatesData","ref","useRef","width","document","documentElement","clientWidth","hieght","clientHeight","size","setSize","onResize","height","window","addEventListener","margin","top","right","bottom","left","current","svgEL","select","selectAll","remove","svg","append","attr","csv","error","csvdata","console","log","d","date","timeParse","value","then","x","scaleTime","domain","extent","range","xAxis","call","axisBottom","y","scaleLinear","max","yAxis","axisLeft","clip","brush","brushX","on","updateChart","line","datum","idleTimeout","idled","event","selection","setTimeout","invert","move","transition","duration","removeEventListener","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\"\r\nimport * as d3 from \"d3\"\r\n\r\nfunction Statistics(data) {\r\n  const [statesData, setStatesData] = useState([]);     //react用来注释数据\r\n  const ref = React.useRef(null)\r\n  const [size, setSize] = useState({\r\n    width: document.documentElement.clientWidth,\r\n    hieght: document.documentElement.clientHeight\r\n  })\r\n\r\n  const onResize = useCallback(() => {\r\n    setSize({\r\n      width: document.documentElement.clientWidth,\r\n      height: document.documentElement.clientHeight,\r\n    })\r\n  }, [])\r\n\r\n  // console.log(data)\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n\r\n      window.addEventListener('resize', onResize);\r\n      // set the dimensions and margins of the graph\r\n      const margin = { top: 10, right: 30, bottom: 30, left: 60 },\r\n        width = ref.current.clientWidth - 30,\r\n        height = 400 - margin.top - margin.bottom;\r\n\r\n      const svgEL = d3.select(ref.current);\r\n      svgEL.selectAll(\"*\").remove();\r\n\r\n      // append the svg object to the body of the page\r\n      const svg = svgEL\r\n        .append(\"svg\")\r\n        .attr(\"width\", width + margin.left + margin.right)\r\n        .attr(\"height\", height + margin.top + margin.bottom)\r\n        .append(\"g\")\r\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n      //Read the data\r\n      d3.csv(\"./data/date2.csv\", function (error, csvdata) {\r\n\r\n        if (error) {\r\n          console.log(error);\r\n        }\r\n        console.log(csvdata);\r\n      },\r\n        // When reading the csv, I must format variables:\r\n        function (d) {\r\n          return { date: d3.timeParse(\"%Y-%m-%d\")(d.date), value: d.value }\r\n        }).then(\r\n          // Now I can use this dataset:\r\n          function (data) {\r\n            console.log(data)\r\n            // Add X axis --> it is a date format\r\n            const x = d3.scaleTime()\r\n              .domain(d3.extent(data, function (d) { return d.date; }))\r\n              .range([0, width]);\r\n            const xAxis = svg.append(\"g\")\r\n              .attr(\"transform\", `translate(0, ${height})`)\r\n              .call(d3.axisBottom(x));\r\n\r\n            // Add Y axis\r\n            const y = d3.scaleLinear()\r\n              .domain([0, d3.max(data, function (d) { return +d.value; })])\r\n              .range([height, 0]);\r\n            const yAxis = svg.append(\"g\")\r\n              .call(d3.axisLeft(y));\r\n\r\n            // Add a clipPath: everything out of this area won't be drawn.\r\n            const clip = svg.append(\"defs\").append(\"svg:clipPath\")\r\n              .attr(\"id\", \"clip\")\r\n              .append(\"svg:rect\")\r\n              .attr(\"width\", width)\r\n              .attr(\"height\", height)\r\n              .attr(\"x\", 0)\r\n              .attr(\"y\", 0);\r\n\r\n            // Add brushing\r\n            const brush = d3.brushX()                   // Add the brush feature using the d3.brush function\r\n              .extent([[0, 0], [width, height]])  // initialise the brush area: start at 0,0 and finishes at width,height: it means I select the whole graph area\r\n              .on(\"end\", updateChart)               // Each time the brush selection changes, trigger the 'updateChart' function\r\n\r\n            // Create the line variable: where both the line and the brush take place\r\n            const line = svg.append('g')\r\n              .attr(\"clip-path\", \"url(#clip)\")\r\n\r\n            // Add the line\r\n            line.append(\"path\")\r\n              .datum(data)\r\n              .attr(\"class\", \"line\")  // I add the class line to be able to modify this line later on.\r\n              .attr(\"fill\", \"none\")\r\n              .attr(\"stroke\", \"#a52723\")\r\n              .attr(\"stroke-width\", 1.5)\r\n              .attr(\"d\", d3.line()\r\n                .x(function (d) { return x(d.date) })\r\n                .y(function (d) { return y(d.value) })\r\n              )\r\n\r\n            // Add the brushing\r\n            line\r\n              .append(\"g\")\r\n              .attr(\"class\", \"brush\")\r\n              .call(brush);\r\n\r\n            // A function that set idleTimeOut to null\r\n            let idleTimeout\r\n            function idled() { idleTimeout = null; }\r\n\r\n            // A function that update the chart for given boundaries\r\n            function updateChart(event, d) {\r\n\r\n              // What are the selected boundaries?\r\n              const extent = event.selection\r\n\r\n              // If no selection, back to initial coordinate. Otherwise, update X axis domain\r\n              if (!extent) {\r\n                if (!idleTimeout) return idleTimeout = setTimeout(idled, 350); // This allows to wait a little bit\r\n                x.domain([4, 8])\r\n              } else {\r\n                x.domain([x.invert(extent[0]), x.invert(extent[1])])\r\n                line.select(\".brush\").call(brush.move, null) // This remove the grey brush area as soon as the selection has been done\r\n              }\r\n\r\n              // Update axis and line position\r\n              xAxis.transition().duration(1000).call(d3.axisBottom(x))\r\n              line\r\n                .select('.line')\r\n                .transition()\r\n                .duration(1000)\r\n                .attr(\"d\", d3.line()\r\n                  .x(function (d) { return x(d.date) })\r\n                  .y(function (d) { return y(d.value) })\r\n                )\r\n            }\r\n            // If user double click, reinitialize the chart\r\n            svg.on(\"dblclick\", function () {\r\n              x.domain(d3.extent(data, function (d) { return d.date; }))\r\n              xAxis.transition().call(d3.axisBottom(x))\r\n              line\r\n                .select('.line')\r\n                .transition()\r\n                .attr(\"d\", d3.line()\r\n                  .x(function (d) { return x(d.date) })\r\n                  .y(function (d) { return y(d.value) })\r\n                )\r\n            });\r\n          })\r\n      return (() => {\r\n        window.removeEventListener('resize', onResize)\r\n      })\r\n\r\n    })();\r\n  }, [statesData.length, size.width]\r\n  )\r\n\r\n  return (\r\n    <div className=\"down-chart-container wider\">\r\n      <div className=\"chart-title\">SHOOTING CASES in TIMELINE</div>\r\n      <div className=\"down-chart usStatistics\" ref={ref}></div>\r\n      {/* <div className=\"down-chart-example\"><img src=\"./media/time-line.svg\" width=\"95%\"/> </div> */}\r\n    </div>    //渲染了这个东西出来\r\n  )\r\n}\r\n\r\nexport default Statistics"]},"metadata":{},"sourceType":"module"}